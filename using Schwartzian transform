#include<stdio.h>
#include<stdlib.h>
#include<time.h>
#define student_num 800


struct name{
        char name[10];
    };
struct student_data{
        struct name first_name;
        struct name second_name;
        int score;//真正需要排列的東西
    };

void swap(struct student_data *base, int k){
     struct student_data *tmp=calloc(1,sizeof(struct student_data ));                    
    tmp[0]= base[k+1];
    base[k+1]=base[k];
    base[k]=tmp[0];
    free(tmp);
}

void bsort (struct student_data * base, size_t total_elems, size_t size,__compar_fn_t cmp)
{
  int i = 0;
    int j = 0;
    for (i = 0; i < total_elems - 1; i++){
        for (j = 0; j < total_elems - i - 1; j++){
            if (cmp(base,j))
                {
                     swap(base,j);
                  
                }
            }
        }
    }

int compare(struct student_data * base1,int h){
    int i,j;
    i=base1[h+1].score;
    j=base1[h].score;
    if(i-j>0)
    return 0;
    else
    return 1;
}






int main(void){
    struct name fdata[10]={"a","b","c","d","e","f","g","h","i","j"};
    struct name sdata[10]={"1","2","3","4","5","6","7","8","9","10"}; 
    
    struct student_data *student=calloc(student_num,sizeof(struct student_data ));
    srand(time(NULL));
        for(int i=0;i<student_num;i++){
            student[i].first_name=fdata[(rand()%10)];
            student[i].second_name=sdata[(rand()%10)];
            student[i].score=(rand()%100)+1;
        }
        printf("-----grdae before sorting-----\n");
        for(int i=0;i<student_num;i++){
            printf("%s ",student[i].second_name.name);
            printf("%s:",student[i].first_name.name);
            printf("%d\n", student[i].score);
        }
        printf("------------------------------\n");
        printf("-----grdae after sorting------\n");

        bsort(student,student_num,sizeof(struct student_data *),compare);

        for(int i=0;i<student_num;i++){
            printf("%s ",student[i].second_name.name);
            printf("%s:",student[i].first_name.name);
            printf("%d\n", student[i].score);
        }

        printf("------------------------------\n");


}
